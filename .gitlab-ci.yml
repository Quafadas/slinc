image: registry.gitlab.com/mhammons/slinc:latest

variables:
  XDG_CACHE_HOME: "$CI_BUILDS_DIR/$CI_PROJECT_PATH/.cache"
  MILL_PREAMBLE: "./mill -D user.home=$XDG_CACHE_HOME"

stages:
  - validate
  - build
  - test
  - pages

failMR:
  stage: validate
  script:
    - exit 1
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master" && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME != "patch" && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME != "minor" && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME != "major"'

compile:
  stage: build
  cache:
    - key: mill
      paths:
        - .cache/*
    - key: $CI_PIPELINE_ID
      paths:
        - out/*
  rules:
    - when: always
  script:
    - $MILL_PREAMBLE clean
    - $MILL_PREAMBLE __.compile

testCode:
  stage: test
  needs: [compile]
  cache:
    - key: mill
      paths:
        - .cache/*
    - key: $CI_PIPELINE_ID
      paths:
        - out/*
  rules:
    - when: always
  script:
    - $MILL_PREAMBLE __.test

mimaCheck:
  stage: test
  needs: [compile]
  cache:
    - key: mill
      paths:
        - .cache/*
    - key: $CI_PIPELINE_ID
      paths:
        - out/*
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "patch"'
      variables:
        DIRECTION: "both"
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "minor"'
      variables:
        DIRECTION: "backward"
  script:
    - $MILL_PREAMBLE -D mima.direction=$DIRECTION __.mimaReportBinaryIssues

pages:
  stage: pages
  cache:
    - key: mill
      paths:
        - .cache/*
    - key: $CI_PIPELINE_ID
      paths:
        - out/*
  rules:
    - when: manual
  script:
    - $MILL_PREAMBLE slinc.docJar
    - cp -rv out/slinc/docJar.dest/javadoc .
    - mv javadoc public
  artifacts:
    paths:
      - public
